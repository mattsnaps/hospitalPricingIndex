#property.filename = logs
property.filepath = /Users/matthewpriebe/IdeaProjects/hospitalPricingIndex/logs


appender.hibernate.strategy.delete.type = Delete
appender.hibernate.strategy.delete.basePath = ${filepath}
appender.hibernate.strategy.delete.maxDepth = 1
appender.hibernate.strategy.delete.ifAccumulatedFileCount.type = IfAccumulatedFileCount
appender.hibernate.strategy.delete.ifAccumulatedFileCount.exceeds = 5


appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

appender.file.type = File
appender.file.name = LOGFILE
appender.file.fileName=${filepath}/hospitalPricingIndex.log
appender.file.layout.type=PatternLayout
appender.file.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n

## This appender is set up to create a new file each time the server is started.
## It will delete log files if there are more than 5
appender.hibernate.type = RollingFile
appender.hibernate.name = HIBFILE
appender.hibernate.fileName = ${filepath}/hospitalPricingIndexHibernate.log
appender.hibernate.filePattern=${filepath}/hospitalPricingIndexHibernate_%d{yyyy-MMM-dd_HH_mm_ss}_%i.log
appender.hibernate.layout.type=PatternLayout
appender.hibernate.layout.pattern=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} - %msg%n
appender.hibernate.policies.type = Policies

appender.hibernate.policies.time.type = OnStartupTriggeringPolicy
appender.hibernate.strategy.type = DefaultRolloverStrategy

loggers=file, hibernate

logger.file.name = com.matthewpriebe.hpi
logger.file.level = debug
logger.file.appenderRefs = file
logger.file.appenderRef.file.ref = LOGFILE
#logger.file.additivity will prevent logging in the parent (root, which is console in this case)
logger.file.additivity = true

logger.hibernate.name = org.hibernate
logger.hibernate.level = debug
logger.hibernate.appenderRefs = file
logger.hibernate.appenderRef.file.ref = HIBFILE
logger.hibernate.additivity = false 


rootLogger.level = error
rootLogger.appenderRefs = stdout
rootLogger.appenderRef.stdout.ref = STDOUT